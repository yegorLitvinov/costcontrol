- name: Fetch repo
  git:
    repo: "{{ repo }}"
    dest: "{{ project_dir }}"
  notify:
    - restart-gunicorn

- name: Create virtualenv
  command: "virtualenv --python=/usr/bin/python3.6 {{ venv_dir }}"

- name: Install pipenv requirements
  command: "{{ user_home }}/.local/bin/pipenv install"
  environment:
    PIPENV_VENV_IN_PROJECT: true
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Clean deleted pipenv requirements
  command: "{{ user_home }}/.local/bin/pipenv clean"
  environment:
    PIPENV_VENV_IN_PROJECT: true
    LC_ALL: C.UTF-8
    LANG: C.UTF-8

- name: Produce create db sql
  django_manage:
    app_path: "{{ django_dir }}"
    command: sqlcreate
    settings: "{{ django_settings }}"
    virtualenv: "{{ venv_dir }}"
  register: create_db_sql

- name: Copy output to create_db.sql
  copy:
    content: "{{ create_db_sql.out }}"
    dest: /tmp/create_db.sql
    mode: 0666

- name: Create db
  become: yes
  become_user: postgres
  shell: psql -f /tmp/create_db.sql 2>/dev/null

- name: Migrate
  django_manage:
    app_path: "{{ django_dir }}"
    command: migrate
    settings: "{{ django_settings }}"
    virtualenv: "{{ venv_dir }}"

- name: Collect static
  django_manage:
    app_path: "{{ django_dir }}"
    command: collectstatic
    settings: "{{ django_settings }}"
    virtualenv: "{{ venv_dir }}"
